version: "3.8"

services:
  broker:
    image: rabbitmq:3.8.16-alpine
    # build:
    #   context: .
    #   dockerfile: broker.Dockerfile
    command: '/bin/bash -c "rabbitmq-plugins enable rabbitmq_mqtt; rabbitmq-server"'
    volumes:
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./definitions.json:/etc/rabbitmq/definitions.json:ro
    # enable the mttq protocol
    # volumes:
    #   - ./scripts/create-user.sh:/create-user.sh
    restart: unless-stopped
    container_name: "broker"
    ports:
      # - 5672:5672
      - 15672:15672
      - 1883:1883
    networks:
      - pubsub

  # run the iot device in local for more accesibility
  # pub:
  #   build:
  #     context: .
  #     dockerfile: pub.Dockerfile
  #   container_name: "pub"
  #   # command: "python3 pub.py"
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - 1884:1883
  #   volumes:
  #     - ./pub:/app
  #   networks:
  #     - pubsub
  #   depends_on:
  #     - broker

  db:
    image: postgres:12
    container_name: "db"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=db
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pubsub

  apirest:
    build:
      context: .
      dockerfile: api.Dockerfile
    container_name: "apirest"
    environment:
      STAGE: test
    command: "python3 main.py"
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - db
      - broker
    volumes:
      - ./app:/code
    networks:
      - pubsub

networks:
  # pubsub:
  #   driver: bridge
  #   ipam:
  #     driver: default
  pubsub:
